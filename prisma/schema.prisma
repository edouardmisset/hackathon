generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id              Int                     @id @default(autoincrement())
  firstName       String                  @db.VarChar(255)
  lastName        String                  @db.VarChar(255)
  email           String                  @unique @db.VarChar(255)
  hashedPassword  String                  @db.VarChar(255)
  UserToEvent     userRegisteredToEvent[]
  currentSkills   currentSkills[]
  skillsToacquire skillsToacquire[]
  currentUser     friend[]                @relation("currentUser")
  friend          friend[]                @relation("friend")
  event           event[]
}

model event {
  id          Int                     @id @default(autoincrement())
  name        String                  @db.VarChar(255)
  description String                  @db.Text
  online      Boolean
  date        DateTime                @default(now())
  duration    Int
  image       String?                 @db.VarChar(255)
  location    String                  @db.VarChar(255)
  UserToEvent userRegisteredToEvent[]
  eventType   eventType[]
  ownerId     Int
  owner       user                    @relation(fields: [ownerId], references: [id])
}

model userRegisteredToEvent {
  id      Int   @id @default(autoincrement())
  eventId Int
  userId  Int
  event   event @relation(fields: [eventId], references: [id])
  user    user  @relation(fields: [userId], references: [id])
}

model eventType {
  id      Int   @id @default(autoincrement())
  event   event @relation(fields: [eventId], references: [id])
  tag     tag   @relation(fields: [tagId], references: [id])
  eventId Int
  tagId   Int
}

model tag {
  id        Int         @id @default(autoincrement())
  name      String      @db.VarChar(255)
  eventType eventType[]
}

model currentSkills {
  id      Int   @id @default(autoincrement())
  skillId Int
  skill   skill @relation(fields: [skillId], references: [id])
  userId  Int
  user    user  @relation(fields: [userId], references: [id])
  level   Int
}

model skill {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  currentSkills   currentSkills[]
  skillsToacquire skillsToacquire[]
}

model skillsToacquire {
  id      Int   @id @default(autoincrement())
  skillId Int
  skill   skill @relation(fields: [skillId], references: [id])
  userId  Int
  user    user  @relation(fields: [userId], references: [id])
}

model friend {
  id            Int  @id @default(autoincrement())
  currentUserId Int
  currentUser   user @relation("currentUser", fields: [currentUserId], references: [id])
  friendId      Int
  friend        user @relation("friend", fields: [friendId], references: [id])
}
